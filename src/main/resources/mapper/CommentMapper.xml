<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.blog.mapper.CommentMapper">
    <resultMap id="BaseResultMap" type="com.example.blog.domain.Comment">
        <id column="comment_id" jdbcType="BIGINT" property="commentId"/>
        <result column="comment_content" jdbcType="VARCHAR" property="commentContent"/>
        <result column="blog_id" jdbcType="BIGINT" property="blogId"/>
        <result column="createtime" jdbcType="TIMESTAMP" property="createtime"/>
        <result column="userid" jdbcType="BIGINT" property="userid"/>
        <result column="replyid" jdbcType="INTEGER" property="replyid"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        comment_id
        , comment_content, blog_id, createtime, userid, replyid
    </sql>
    <select id="selectByExample" parameterType="com.example.blog.domain.CommentExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_comment
        where comment_id = #{commentId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from t_comment
        where comment_id = #{commentId,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.example.blog.domain.CommentExample">
        delete from t_comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.example.blog.domain.Comment">
        insert into t_comment (comment_id, comment_content, blog_id,
                               createtime, userid, replyid)
        values (#{commentId,jdbcType=BIGINT}, #{commentContent,jdbcType=VARCHAR}, #{blogId,jdbcType=BIGINT},
                #{createtime,jdbcType=TIMESTAMP}, #{userid,jdbcType=BIGINT}, #{replyid,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.example.blog.domain.Comment" useGeneratedKeys="true"
            keyColumn="commentId" keyProperty="commentId">
        insert into t_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="commentId != null">
                comment_id,
            </if>
            <if test="commentContent != null">
                comment_content,
            </if>
            <if test="blogId != null">
                blog_id,
            </if>
            <if test="createtime != null">
                createtime,
            </if>
            <if test="userid != null">
                userid,
            </if>
            <if test="replyid != null">
                replyid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="commentId != null">
                #{commentId,jdbcType=BIGINT},
            </if>
            <if test="commentContent != null">
                #{commentContent,jdbcType=VARCHAR},
            </if>
            <if test="blogId != null">
                #{blogId,jdbcType=BIGINT},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="userid != null">
                #{userid,jdbcType=BIGINT},
            </if>
            <if test="replyid != null">
                #{replyid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.example.blog.domain.CommentExample" resultType="java.lang.Long">
        select count(*) from t_comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_comment
        <set>
            <if test="row.commentId != null">
                comment_id = #{row.commentId,jdbcType=BIGINT},
            </if>
            <if test="row.commentContent != null">
                comment_content = #{row.commentContent,jdbcType=VARCHAR},
            </if>
            <if test="row.blogId != null">
                blog_id = #{row.blogId,jdbcType=BIGINT},
            </if>
            <if test="row.createtime != null">
                createtime = #{row.createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="row.userid != null">
                userid = #{row.userid,jdbcType=BIGINT},
            </if>
            <if test="row.replyid != null">
                replyid = #{row.replyid,jdbcType=INTEGER},
            </if>
        </set>
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_comment
        set comment_id = #{row.commentId,jdbcType=BIGINT},
        comment_content = #{row.commentContent,jdbcType=VARCHAR},
        blog_id = #{row.blogId,jdbcType=BIGINT},
        createtime = #{row.createtime,jdbcType=TIMESTAMP},
        userid = #{row.userid,jdbcType=BIGINT},
        replyid = #{row.replyid,jdbcType=INTEGER}
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.blog.domain.Comment">
        update t_comment
        <set>
            <if test="commentContent != null">
                comment_content = #{commentContent,jdbcType=VARCHAR},
            </if>
            <if test="blogId != null">
                blog_id = #{blogId,jdbcType=BIGINT},
            </if>
            <if test="createtime != null">
                createtime = #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="userid != null">
                userid = #{userid,jdbcType=BIGINT},
            </if>
            <if test="replyid != null">
                replyid = #{replyid,jdbcType=INTEGER},
            </if>
        </set>
        where comment_id = #{commentId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.blog.domain.Comment">
        update t_comment
        set comment_content = #{commentContent,jdbcType=VARCHAR},
            blog_id         = #{blogId,jdbcType=BIGINT},
            createtime      = #{createtime,jdbcType=TIMESTAMP},
            userid          = #{userid,jdbcType=BIGINT},
            replyid         = #{replyid,jdbcType=INTEGER}
        where comment_id = #{commentId,jdbcType=BIGINT}
    </update>
</mapper>