<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.blog.mapper.RedisTestMapper">
  <resultMap id="BaseResultMap" type="com.example.blog.domain.RedisTest">
    <id column="redisid" jdbcType="INTEGER" property="redisid" />
    <result column="left" jdbcType="INTEGER" property="left" />
    <result column="rigth" jdbcType="INTEGER" property="rigth" />
    <result column="top" jdbcType="INTEGER" property="top" />
    <result column="bottom" jdbcType="INTEGER" property="bottom" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    redisid, `left`, rigth, `top`, bottom
  </sql>
  <select id="selectByExample" parameterType="com.example.blog.domain.RedisTestExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_redis
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_redis
    where redisid = #{redisid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_redis
    where redisid = #{redisid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.blog.domain.RedisTestExample">
    delete from t_redis
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.blog.domain.RedisTest">
    insert into t_redis (redisid, `left`, rigth, 
      `top`, bottom)
    values (#{redisid,jdbcType=INTEGER}, #{left,jdbcType=INTEGER}, #{rigth,jdbcType=INTEGER}, 
      #{top,jdbcType=INTEGER}, #{bottom,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.blog.domain.RedisTest">
    insert into t_redis
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="redisid != null">
        redisid,
      </if>
      <if test="left != null">
        `left`,
      </if>
      <if test="rigth != null">
        rigth,
      </if>
      <if test="top != null">
        `top`,
      </if>
      <if test="bottom != null">
        bottom,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="redisid != null">
        #{redisid,jdbcType=INTEGER},
      </if>
      <if test="left != null">
        #{left,jdbcType=INTEGER},
      </if>
      <if test="rigth != null">
        #{rigth,jdbcType=INTEGER},
      </if>
      <if test="top != null">
        #{top,jdbcType=INTEGER},
      </if>
      <if test="bottom != null">
        #{bottom,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.blog.domain.RedisTestExample" resultType="java.lang.Long">
    select count(*) from t_redis
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_redis
    <set>
      <if test="row.redisid != null">
        redisid = #{row.redisid,jdbcType=INTEGER},
      </if>
      <if test="row.left != null">
        `left` = #{row.left,jdbcType=INTEGER},
      </if>
      <if test="row.rigth != null">
        rigth = #{row.rigth,jdbcType=INTEGER},
      </if>
      <if test="row.top != null">
        `top` = #{row.top,jdbcType=INTEGER},
      </if>
      <if test="row.bottom != null">
        bottom = #{row.bottom,jdbcType=INTEGER},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_redis
    set redisid = #{row.redisid,jdbcType=INTEGER},
      `left` = #{row.left,jdbcType=INTEGER},
      rigth = #{row.rigth,jdbcType=INTEGER},
      `top` = #{row.top,jdbcType=INTEGER},
      bottom = #{row.bottom,jdbcType=INTEGER}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.blog.domain.RedisTest">
    update t_redis
    <set>
      <if test="left != null">
        `left` = #{left,jdbcType=INTEGER},
      </if>
      <if test="rigth != null">
        rigth = #{rigth,jdbcType=INTEGER},
      </if>
      <if test="top != null">
        `top` = #{top,jdbcType=INTEGER},
      </if>
      <if test="bottom != null">
        bottom = #{bottom,jdbcType=INTEGER},
      </if>
    </set>
    where redisid = #{redisid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.blog.domain.RedisTest">
    update t_redis
    set `left` = #{left,jdbcType=INTEGER},
      rigth = #{rigth,jdbcType=INTEGER},
      `top` = #{top,jdbcType=INTEGER},
      bottom = #{bottom,jdbcType=INTEGER}
    where redisid = #{redisid,jdbcType=INTEGER}
  </update>
</mapper>