<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.blog.mapper.BlogMapper">
    <resultMap id="BaseResultMap" type="com.example.blog.domain.Blog">
        <id column="blog_id" jdbcType="BIGINT" property="blogId"/>
        <result column="blog_title" jdbcType="VARCHAR" property="blogTitle"/>
        <result column="userid" jdbcType="BIGINT" property="userid"/>
        <result column="type_id" jdbcType="INTEGER" property="typeId"/>
        <result column="blog_status" jdbcType="INTEGER" property="blogStatus"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="cover_image" jdbcType="VARCHAR" property="coverImage"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.blog.domain.Blog">
        <result column="blog_content" jdbcType="LONGVARCHAR" property="blogContent"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        blog_id
        , blog_title, userid, type_id, blog_status, create_time, update_time, cover_image
    </sql>
    <sql id="Blob_Column_List">
        blog_content
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.example.blog.domain.BlogExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_blog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.example.blog.domain.BlogExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_blog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_blog
        where blog_id = #{blogId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from t_blog
        where blog_id = #{blogId,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.example.blog.domain.BlogExample">
        delete from t_blog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.example.blog.domain.Blog">
        insert into t_blog (blog_id, blog_title, userid,
                            type_id, blog_status, create_time,
                            update_time, cover_image, blog_content)
        values (#{blogId,jdbcType=BIGINT}, #{blogTitle,jdbcType=VARCHAR}, #{userid,jdbcType=BIGINT},
                #{typeId,jdbcType=INTEGER}, #{blogStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
                #{updateTime,jdbcType=TIMESTAMP}, #{coverImage,jdbcType=VARCHAR}, #{blogContent,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.example.blog.domain.Blog" useGeneratedKeys="true"
            keyColumn="blogId" keyProperty="blogId">
        insert into t_blog
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="blogId != null">
                blog_id,
            </if>
            <if test="blogTitle != null">
                blog_title,
            </if>
            <if test="userid != null">
                userid,
            </if>
            <if test="typeId != null">
                type_id,
            </if>
            <if test="blogStatus != null">
                blog_status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="coverImage != null">
                cover_image,
            </if>
            <if test="blogContent != null">
                blog_content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="blogId != null">
                #{blogId,jdbcType=BIGINT},
            </if>
            <if test="blogTitle != null">
                #{blogTitle,jdbcType=VARCHAR},
            </if>
            <if test="userid != null">
                #{userid,jdbcType=BIGINT},
            </if>
            <if test="typeId != null">
                #{typeId,jdbcType=INTEGER},
            </if>
            <if test="blogStatus != null">
                #{blogStatus,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="coverImage != null">
                #{coverImage,jdbcType=VARCHAR},
            </if>
            <if test="blogContent != null">
                #{blogContent,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.example.blog.domain.BlogExample" resultType="java.lang.Long">
        select count(*) from t_blog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_blog
        <set>
            <if test="row.blogId != null">
                blog_id = #{row.blogId,jdbcType=BIGINT},
            </if>
            <if test="row.blogTitle != null">
                blog_title = #{row.blogTitle,jdbcType=VARCHAR},
            </if>
            <if test="row.userid != null">
                userid = #{row.userid,jdbcType=BIGINT},
            </if>
            <if test="row.typeId != null">
                type_id = #{row.typeId,jdbcType=INTEGER},
            </if>
            <if test="row.blogStatus != null">
                blog_status = #{row.blogStatus,jdbcType=INTEGER},
            </if>
            <if test="row.createTime != null">
                create_time = #{row.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="row.updateTime != null">
                update_time = #{row.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="row.coverImage != null">
                cover_image = #{row.coverImage,jdbcType=VARCHAR},
            </if>
            <if test="row.blogContent != null">
                blog_content = #{row.blogContent,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update t_blog
        set blog_id = #{row.blogId,jdbcType=BIGINT},
        blog_title = #{row.blogTitle,jdbcType=VARCHAR},
        userid = #{row.userid,jdbcType=BIGINT},
        type_id = #{row.typeId,jdbcType=INTEGER},
        blog_status = #{row.blogStatus,jdbcType=INTEGER},
        create_time = #{row.createTime,jdbcType=TIMESTAMP},
        update_time = #{row.updateTime,jdbcType=TIMESTAMP},
        cover_image = #{row.coverImage,jdbcType=VARCHAR},
        blog_content = #{row.blogContent,jdbcType=LONGVARCHAR}
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_blog
        set blog_id = #{row.blogId,jdbcType=BIGINT},
        blog_title = #{row.blogTitle,jdbcType=VARCHAR},
        userid = #{row.userid,jdbcType=BIGINT},
        type_id = #{row.typeId,jdbcType=INTEGER},
        blog_status = #{row.blogStatus,jdbcType=INTEGER},
        create_time = #{row.createTime,jdbcType=TIMESTAMP},
        update_time = #{row.updateTime,jdbcType=TIMESTAMP},
        cover_image = #{row.coverImage,jdbcType=VARCHAR}
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.blog.domain.Blog">
        update t_blog
        <set>
            <if test="blogTitle != null">
                blog_title = #{blogTitle,jdbcType=VARCHAR},
            </if>
            <if test="userid != null">
                userid = #{userid,jdbcType=BIGINT},
            </if>
            <if test="typeId != null">
                type_id = #{typeId,jdbcType=INTEGER},
            </if>
            <if test="blogStatus != null">
                blog_status = #{blogStatus,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="coverImage != null">
                cover_image = #{coverImage,jdbcType=VARCHAR},
            </if>
            <if test="blogContent != null">
                blog_content = #{blogContent,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where blog_id = #{blogId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.blog.domain.Blog">
        update t_blog
        set blog_title   = #{blogTitle,jdbcType=VARCHAR},
            userid       = #{userid,jdbcType=BIGINT},
            type_id      = #{typeId,jdbcType=INTEGER},
            blog_status  = #{blogStatus,jdbcType=INTEGER},
            create_time  = #{createTime,jdbcType=TIMESTAMP},
            update_time  = #{updateTime,jdbcType=TIMESTAMP},
            cover_image  = #{coverImage,jdbcType=VARCHAR},
            blog_content = #{blogContent,jdbcType=LONGVARCHAR}
        where blog_id = #{blogId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.blog.domain.Blog">
        update t_blog
        set blog_title  = #{blogTitle,jdbcType=VARCHAR},
            userid      = #{userid,jdbcType=BIGINT},
            type_id     = #{typeId,jdbcType=INTEGER},
            blog_status = #{blogStatus,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            cover_image = #{coverImage,jdbcType=VARCHAR}
        where blog_id = #{blogId,jdbcType=BIGINT}
    </update>
</mapper>